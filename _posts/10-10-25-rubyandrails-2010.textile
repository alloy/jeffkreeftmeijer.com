---
layout: post
title: RubyAndRails 2010
excerpt:
published: true
---

If you follow any of us on Twitter, you probably know "80beans":http://80beans.com went to "RubyAndRails":http://rubyandrails.eu in Amsterdam last week. In this weeks article, I'll try to explain what inspired _me_ the most. If you need a talk overview, check out "the RubyAndRails blog":http://rubyandrails.eu/blog.

h3. Rails 3 Mountable apps

"@drogus(Piotr Sarnacki)":http://twitter.com/drogus gave a talk about the work he did on mountable applications in Rails 3 during the "Ruby Summer of Code":http://rubysoc.org/. While the ultimate goal was to have multiple Rails applications running in a single process, development switched to boosting the (existing) Rails Engines to be &ldquo;almost as powerful as applications&rdquo;. In fact, the only difference is that engines have to be mounted and can't be run standalone.

I had a brief but very inspiring chat with Piotr during the Geek dinner and I'm sure we'll hear a lot from him in the future.

h3. Jeff Rose & Sam Aaron

...

h3. Profiling and Frankenstein programming

"@chastell(Piotr Szotkowski)":http://twitter.com/chastell dove into "Project Euler's problem #10":http://projecteuler.net/index.php?section=problems&id=10 and found out finding the sum of all the primes below two million got extremely slow in Ruby. In his talk, he went over a couple of profiling tools and eventually went with "perftools.rb":http://github.com/tmm1/perftools.rb/ for having the least overhead. After that, he went on tweaking the calculation code and eventually using "RubyInline":http://www.zenspider.com/ZSS/Products/RubyInline/ to be able to use inline C, creating a really fast Frankenstein of languages.

h3. Corey Haines

...

h3. Fancy programming

"@bakkdoor(Christopher "Mr. Fancy" Bertels)":http://twitter.com/bakkdoor gave a talk about his programming language called "Fancy":http://www.fancy-lang.org/. Inspired by Smalltalk, Ruby and Erlang and running on Rubinius since a couple of weeks, Fancy aims to be a reasonably fast truly object oriented dynamic language that's easy to understand. 

Don't let all that smart talk scare you, though. Fancy was written for fun and it seems like an amazing way to learn about programming in general:

bq. &ldquo; We're very open to discussion on anything related to the language, its features or semantics. It's about the fun after all. &rdquo;
